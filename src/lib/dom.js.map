{"version":3,"file":"dom.js","sources":["../src/$core$/Utils.ts","../src/$core$/Observer.ts","../src/$core$/Query2.ts","../src/$core$/FieldSet.ts","../src/$core$/Style.ts"],"sourcesContent":["/*\r\n * Made by o1-preview, with my rewriting, but who I am? I don't say...\r\n */\r\n\r\n//\r\nexport type Point = DOMPoint;\r\n\r\n//\r\nexport function parseOrigin(origin: string, element: Element): Point {\r\n    const values = origin.split(' ');\r\n    const x = parseLength(values[0], ()=>element.clientWidth);\r\n    const y = parseLength(values[1], ()=>element.clientHeight);\r\n    return new DOMPoint(x, y);\r\n}\r\n\r\n//\r\nexport function parseLength(value: string, size: ()=>number): number {\r\n    if (value.endsWith('%')) {\r\n        return (parseFloat(value) / 100) * size();\r\n    }\r\n    return parseFloat(value);\r\n}\r\n\r\n//\r\nexport function getOffsetParent(element: Element): Element | null {\r\n    return (element as HTMLElement)?.offsetParent ?? (element as any)?.host;\r\n}\r\n\r\n//\r\nexport function getOffsetParentChain(element: Element): Element[] {\r\n    const parents: Element[] = [];\r\n    let current: Element | null = element;\r\n    while (current) {\r\n        const parent = getOffsetParent(current);\r\n\r\n        //\r\n        if (parent && (/*parent instanceof HTMLBodyElement ||*/ parent instanceof HTMLHtmlElement)) {\r\n            break;\r\n        }\r\n\r\n        //\r\n        if (current = parent) {\r\n            parents.push(current);\r\n        }\r\n    }\r\n    return parents;\r\n}\r\n\r\n//\r\nexport const url = (type, ...source) => {\r\n    return URL.createObjectURL(new Blob(source, {type}));\r\n};\r\n\r\n//\r\nexport const html = (source, type: DOMParserSupportedType = 'text/html') => {\r\n    const parser = new DOMParser();\r\n    const parsed = parser.parseFromString(source, type);\r\n    return parsed.querySelector('template') ?? parsed.querySelector(\"*\");\r\n};\r\n\r\n//\r\nexport const MOC = (element: HTMLElement | null, selector: string): boolean => {\r\n    return (!!element?.matches?.(selector) || !!element?.closest?.(selector));\r\n};\r\n\r\n//\r\nexport const MOCElement = (element: HTMLElement | null, selector: string): HTMLElement | null => {\r\n    return ((!!element?.matches?.(selector) ? element : null) || element?.closest?.(selector)) as HTMLElement | null;\r\n};\r\n\r\n","\r\n//\r\nconst onBorderObserve = new WeakMap<HTMLElement, Function[]>();\r\nconst onContentObserve = new WeakMap<HTMLElement, Function[]>();\r\n\r\n//\r\nexport const getPxValue = (element, name)=>{\r\n    if (\"computedStyleMap\" in element) {\r\n        const cm = element?.computedStyleMap();\r\n        return cm.get(name)?.value || 0;\r\n    } else {\r\n        const cs = getComputedStyle(element, \"\");\r\n        return (parseFloat(cs.getPropertyValue(name)?.replace?.(\"px\", \"\")) || 0);\r\n    }\r\n}\r\n\r\n// TODO: support of fragments\r\nexport const observeContentBox = (element, cb) => {\r\n    if (!onContentObserve.has(element)) {\r\n        const callbacks: Function[] = [];\r\n\r\n        //\r\n        const observer = new ResizeObserver((entries) => {\r\n            for (const entry of entries) {\r\n                if (entry.contentBoxSize) {\r\n                    const contentBoxSize = entry.contentBoxSize[0];\r\n                    if (contentBoxSize) {\r\n                        callbacks.forEach((cb) => cb?.(contentBoxSize, observer));\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        //\r\n        cb?.({\r\n            inlineSize: element.clientWidth - (getPxValue(element, \"padding-left\") + getPxValue(element, \"padding-right\")),\r\n            blockSize: element.clientHeight - (getPxValue(element, \"padding-top\") + getPxValue(element, \"padding-bottom\")),\r\n        }, observer);\r\n\r\n        //\r\n        onContentObserve.set(element, callbacks);\r\n        observer.observe(element, {box: \"content-box\"});\r\n    }\r\n\r\n    //\r\n    onContentObserve.get(element)?.push(cb);\r\n};\r\n\r\n// TODO: support of fragments\r\nexport const observeBorderBox = (element, cb) => {\r\n    if (!onBorderObserve.has(element)) {\r\n        const callbacks: Function[] = [];\r\n\r\n        //\r\n        const observer = new ResizeObserver((entries) => {\r\n            for (const entry of entries) {\r\n                if (entry.borderBoxSize) {\r\n                    const borderBoxSize = entry.borderBoxSize[0];\r\n                    if (borderBoxSize) {\r\n                        callbacks.forEach((cb) => cb?.(borderBoxSize, observer));\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        //\r\n        cb?.({\r\n            inlineSize: element.offsetWidth,\r\n            blockSize: element.offsetHeight,\r\n        }, observer);\r\n\r\n        //\r\n        onBorderObserve.set(element, callbacks);\r\n        observer.observe(element, {box: \"border-box\"});\r\n    }\r\n\r\n    //\r\n    onBorderObserve.get(element)?.push(cb);\r\n}\r\n\r\n//\r\nexport const observeAttribute = (element, attribute, cb) => {\r\n    const attributeList = new Set<string>((attribute.split(\",\") || [attribute]).map((s) => s.trim()));\r\n    const observer = new MutationObserver((mutationList, observer) => {\r\n        for (const mutation of mutationList) {\r\n            if (mutation.attributeName && attributeList.has(mutation.attributeName)) {\r\n                cb(mutation, observer);\r\n            }\r\n        }\r\n    });\r\n\r\n    //\r\n    observer.observe(element, {\r\n        attributeOldValue: true,\r\n        attributes: true,\r\n        attributeFilter: [...attributeList]\r\n    });\r\n\r\n    //\r\n    attributeList.forEach((attribute)=>{\r\n        cb({ target: element, type: \"attributes\", attributeName: attribute, oldValue: (element as HTMLElement)?.getAttribute?.(attribute) }, observer);\r\n    });\r\n\r\n    //\r\n    return observer;\r\n};\r\n\r\n//\r\nexport const observeAttributeBySelector = (element, selector, attribute, cb) => {\r\n    const attributeList = new Set<string>((attribute.split(\",\") || [attribute]).map((s) => s.trim()));\r\n    const observer = new MutationObserver((mutationList, observer) => {\r\n        for (const mutation of mutationList) {\r\n            if (mutation.type == \"childList\") {\r\n                const addedNodes = Array.from(mutation.addedNodes) || [];\r\n                const removedNodes = Array.from(mutation.removedNodes) || [];\r\n\r\n                //\r\n                addedNodes.push(...Array.from(mutation.addedNodes || []).flatMap((el)=>{\r\n                    return Array.from((el as HTMLElement)?.querySelectorAll?.(selector) || []) as Element[];\r\n                }));\r\n\r\n                //\r\n                removedNodes.push(...Array.from(mutation.removedNodes || []).flatMap((el)=>{\r\n                    return Array.from((el as HTMLElement)?.querySelectorAll?.(selector) || []) as Element[];\r\n                }));\r\n\r\n                //\r\n                [...Array.from((new Set(addedNodes)).values())].filter((el) => (<HTMLElement>el)?.matches?.(selector)).forEach((target)=>{\r\n                    attributeList.forEach((attribute)=>{\r\n                        cb({ target, type: \"attributes\", attributeName: attribute, oldValue: (target as HTMLElement)?.getAttribute?.(attribute) }, observer);\r\n                    });\r\n                });\r\n            } else\r\n            if ((mutation.target as HTMLElement)?.matches?.(selector) && (mutation.attributeName && attributeList.has(mutation.attributeName))) {\r\n                cb(mutation, observer);\r\n            }\r\n        }\r\n    });\r\n\r\n    //\r\n    observer.observe(element, {\r\n        attributeOldValue: true,\r\n        attributes: true,\r\n        attributeFilter: [...attributeList],\r\n        childList: true,\r\n        subtree: true,\r\n        characterData: true\r\n    });\r\n\r\n    //\r\n    Array.from(element.querySelectorAll(selector)).forEach((target)=>{\r\n        attributeList.forEach((attribute)=>{\r\n            cb({ target, type: \"attributes\", attributeName: attribute, oldValue: (target as HTMLElement)?.getAttribute?.(attribute) }, observer);\r\n        });\r\n    });\r\n\r\n    //\r\n    return observer;\r\n};\r\n\r\n//\r\nexport const observeBySelector = (element, selector = \"*\", cb = (mut, obs)=>{}) => {\r\n    const observer = new MutationObserver((mutationList, observer) => {\r\n        for (const mutation of mutationList) {\r\n            if (mutation.type == \"childList\") {\r\n                const $addedNodes   = Array.from(mutation.addedNodes)   || [];\r\n                const $removedNodes = Array.from(mutation.removedNodes) || [];\r\n\r\n                //\r\n                $addedNodes.push(...Array.from(mutation.addedNodes || []).flatMap((el)=>{\r\n                    return Array.from((el as HTMLElement)?.querySelectorAll?.(selector) || []) as Element[];\r\n                }));\r\n\r\n                //\r\n                $removedNodes.push(...Array.from(mutation.removedNodes || []).flatMap((el)=>{\r\n                    return Array.from((el as HTMLElement)?.querySelectorAll?.(selector) || []) as Element[];\r\n                }));\r\n\r\n                //\r\n                const addedNodes   = [...Array.from((new Set($addedNodes)).values())].filter((el) => (<HTMLElement>el)?.matches?.(selector));\r\n                const removedNodes = [...Array.from((new Set($removedNodes)).values())].filter((el) => (<HTMLElement>el)?.matches?.(selector));\r\n\r\n                //\r\n                if (addedNodes.length > 0 || removedNodes.length > 0) {\r\n                    cb?.({\r\n                        type: mutation.type,\r\n                        target: mutation.target,\r\n                        attributeName: mutation.attributeName,\r\n                        attributeNamespace: mutation.attributeNamespace,\r\n                        nextSibling: mutation.nextSibling,\r\n                        oldValue: mutation.oldValue,\r\n                        previousSibling: mutation.previousSibling,\r\n                        addedNodes, removedNodes,\r\n                    }, observer);\r\n                }\r\n            }\r\n        }\r\n    });\r\n\r\n    //\r\n    observer.observe(element, {\r\n        childList: true,\r\n        subtree : true\r\n    });\r\n\r\n    //\r\n    const selected = Array.from(element.querySelectorAll(selector));\r\n    if (selected.length > 0) {\r\n        cb?.({ addedNodes: selected }, observer);\r\n    }\r\n\r\n    //\r\n    return observer;\r\n};\r\n","import { observeAttributeBySelector, observeBySelector } from \"./Observer\";\r\nimport { MOCElement } from \"./Utils\";\r\n\r\n//\r\nexport default class AxQuery2 {\r\n    #rootElement: HTMLElement = document.documentElement;\r\n    #selector: string = \"*\";\r\n\r\n    //\r\n    constructor(selector = \"*\", rootElement = document.documentElement) {\r\n        this.#rootElement = rootElement;\r\n        this.#selector = selector;\r\n    }\r\n\r\n    //\r\n    observeAttribute(attribute, fx) {\r\n        return observeAttributeBySelector(this.#rootElement, this.#selector, attribute, fx);\r\n    }\r\n\r\n    //\r\n    observeNodes(fx) {\r\n        return observeBySelector(this.#rootElement, this.#selector, fx);\r\n    }\r\n\r\n    //\r\n    get query() {\r\n        return this.#rootElement.querySelector(this.#selector);\r\n    }\r\n\r\n    //\r\n    get queryAll() {\r\n        return Array.from(this.#rootElement.querySelectorAll(this.#selector));\r\n    }\r\n\r\n    //\r\n    delegated(name, cb, options) {\r\n        this.#rootElement.addEventListener(name, (ev)=>{\r\n            if (ev.target.matches(this.#selector)) { cb(ev); };\r\n        }, options);\r\n    }\r\n\r\n    // pointer events, mouse events, some touch events\r\n    directly(name, cb: (ev: MouseEvent | PointerEvent | TouchEvent) => any, options) {\r\n        this.#rootElement.addEventListener(name, (ev)=>{\r\n            ev.stopPropagation();\r\n            const element = document.elementFromPoint(ev.clientX, ev.clientY) as HTMLElement;\r\n            const treeElement = MOCElement(element, this.#selector);\r\n            if (treeElement && Array.from(document.elementsFromPoint(ev.clientX, ev.clientY)).indexOf(treeElement) >= 0) { return cb(ev); }\r\n        }, options);\r\n    }\r\n}\r\n\r\n//\r\nexport const $$ = (selector = \"*\", rootElement = document.documentElement)=>{\r\n    return new AxQuery2(selector, rootElement);\r\n}\r\n","import { observeBySelector } from \"./Observer\";\r\n\r\n//\r\nexport const includeSelf = (target, selector)=>{\r\n    return (target.querySelector(selector) ?? (target.matches(selector) ? target : null));\r\n}\r\n\r\n//\r\nexport const updateInput = (state, target)=>{\r\n    const selector = \"input:where([type=\\\"text\\\"], [type=\\\"number\\\"], [type=\\\"range\\\"])\";\r\n    const input    = includeSelf(target, selector);\r\n    const name     = input?.name || target?.dataset?.name || \"\";\r\n\r\n    //\r\n    if (state?.[name] != null) { // not exists not preferred...\r\n        if (state && input?.matches?.(selector)) {\r\n            if (input.value != state[name]) {\r\n                input.value = state[name];\r\n                input.dispatchEvent(new Event(\"change\", { bubbles: true, cancelable: true, }));\r\n            }\r\n        }\r\n\r\n        // setup radio boxes (requires wrapper)\r\n        if (state) {\r\n            const radio = includeSelf(target, `input:where([type=\\\"radio\\\"][name=\\\"${name}\\\"][value=\\\"${state?.[name]}\\\"])`);\r\n            if (state && radio && !radio?.checked) { radio?.click?.(); };\r\n        }\r\n\r\n        // setup check boxes\r\n        const checkbox = includeSelf(target, \"input:where([type=\\\"checkbox\\\"])\");\r\n        if (state && checkbox) {\r\n            if (state[name] != checkbox.checked) {\r\n                checkbox.checked = !!state[name];\r\n                checkbox.dispatchEvent(new Event(\"change\", { bubbles: true, cancelable: true, }))\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n//\r\nexport const synchronizeInputs = (state, wrapper = \".u2-input\", fields = document.documentElement, subscribe?: Function)=>{\r\n\r\n    //\r\n    const onChange = (ev)=>{\r\n        const input  = ev?.target?.matches(\"input\") ? ev?.target : ev?.target?.querySelector?.(\"input\");\r\n        const target = ev?.target?.matches(wrapper) ? ev?.target : input?.closest?.(wrapper);\r\n        const name   = input?.name || target?.dataset?.name;\r\n\r\n        //\r\n        if (state?.[name] != null) { // not exists not preferred...\r\n            if (input?.matches?.(\"input:where([type=\\\"text\\\"], [type=\\\"number\\\"], [type=\\\"range\\\"])\")) {\r\n                const value = (input.valueAsNumber != null && !isNaN(input.valueAsNumber)) ? input.valueAsNumber : input.value;\r\n                if (state[name] != value) { state[name] = value; };\r\n            }\r\n\r\n            // any radio-box\r\n            if (input?.matches?.(\"input[type=\\\"radio\\\"]:checked\")) {\r\n                if (state[name] != input.value) { state[name] = input.value; };\r\n            }\r\n\r\n            // any check-box\r\n            if (input?.matches?.(\"input[type=\\\"checkbox\\\"]\")) {\r\n                if (state[name] != input.checked) { state[name] = input.checked; };\r\n            }\r\n        }\r\n    };\r\n\r\n    //\r\n    fields.addEventListener(\"input\", onChange);\r\n    fields.addEventListener(\"change\", onChange);\r\n\r\n    //\r\n    requestIdleCallback(()=>{\r\n        fields.querySelectorAll(wrapper).forEach((target)=>updateInput(state, target));\r\n    }, {timeout: 100});\r\n\r\n    // cross-window or frame syncretism\r\n    subscribe?.(state, (value, property)=>{\r\n        fields.querySelectorAll(wrapper).forEach((target)=>updateInput(state, target));\r\n    });\r\n\r\n    //\r\n    observeBySelector(fields, wrapper, (mutations)=>{\r\n        mutations.addedNodes.forEach((target)=>{\r\n            requestIdleCallback(()=>{\r\n                updateInput(state, target);\r\n            }, {timeout: 100});\r\n        });\r\n    });\r\n\r\n    //\r\n    fields.addEventListener(\"u2-appear\", ()=>{\r\n        requestIdleCallback(()=>{\r\n            fields.querySelectorAll(wrapper).forEach((target)=>updateInput(state, target));\r\n        }, {timeout: 100});\r\n    });\r\n}\r\n","//\r\nconst OWNER = \"DOM\";\r\nconst styleElement = document.createElement(\"style\");\r\ndocument.querySelector(\"head\")?.appendChild?.(styleElement);\r\nstyleElement.dataset.owner = OWNER;\r\n\r\n//\r\nexport type StyleTuple = [selector: string, sheet: object];\r\nexport const setStyleRule = (selector: string, sheet: object) => {\r\n    const styleRules = styleElement.sheet;\r\n    let ruleId = Array.from(styleRules?.cssRules || []).findIndex((rule) => (rule instanceof CSSStyleRule ? (selector == rule?.selectorText) : false));\r\n    if (ruleId <= -1) {ruleId = styleRules?.insertRule(`${selector} {}`) as number;}\r\n\r\n    //\r\n    const rule = styleElement?.sheet?.cssRules[ruleId];\r\n    Object.entries(sheet).forEach(([propName, propValue]) => {\r\n        if (rule instanceof CSSStyleRule) {\r\n            const exists = rule?.style?.getPropertyValue(propName);\r\n            if (!exists || exists != propValue) {\r\n                rule?.style?.setProperty?.(propName, (propValue || \"\") as string, \"\");\r\n            }\r\n        }\r\n    });\r\n};\r\n\r\n//\r\nexport const setStyleRules = (classes: StyleTuple[]) => {\r\n    return classes?.map?.((args) => setStyleRule(...args));\r\n};\r\n\r\n//\r\nconst setStyleURL = (base: [any, any], url: string)=>{\r\n    //\r\n    if (base[1] == \"innerHTML\") {\r\n        base[0][base[1]] = `@import url(\"${url}\");`;\r\n    } else {\r\n        base[0][base[1]] = url;\r\n    }\r\n};\r\n\r\n//\r\nexport const hash = async (string: string) => {\r\n    const hashBuffer = await crypto.subtle.digest('SHA-256', new TextEncoder().encode(string));\r\n    return \"sha256-\" + btoa(String.fromCharCode.apply(null, new Uint8Array(hashBuffer) as unknown as number[]));\r\n};\r\n\r\n//\r\nexport const loadStyleSheet = async (inline: string, base?: [any, any], integrity?: string|Promise<string>)=>{\r\n    const url = URL.canParse(inline) ? inline : URL.createObjectURL(new Blob([inline], {type: \"text/css\"}));\r\n    if (base?.[0] && (!URL.canParse(inline) || integrity) && base?.[0] instanceof HTMLLinkElement) {\r\n        const I: any = (integrity ?? hash(inline));\r\n        if (typeof I?.then == \"function\") {\r\n            I?.then?.((H)=>base?.[0]?.setAttribute?.(\"integrity\", H));\r\n        } else {\r\n            base?.[0]?.setAttribute?.(\"integrity\", I as string);\r\n        }\r\n    }\r\n    if (base) setStyleURL(base, url);\r\n};\r\n\r\n//\r\nexport const loadBlobStyle = (inline: string)=>{\r\n    const style = document.createElement(\"link\");\r\n    style.rel = \"stylesheet\";\r\n    style.type = \"text/css\";\r\n    style.crossOrigin = \"same-origin\";\r\n    style.dataset.owner = OWNER;\r\n    loadStyleSheet(inline, [style, \"href\"]);\r\n    document.head.appendChild(style);\r\n    return style;\r\n};\r\n\r\n//\r\nexport const loadInlineStyle = (inline: string, rootElement = document.head)=>{\r\n    const PLACE = (rootElement.querySelector(\"head\") ?? rootElement);\r\n    if (PLACE instanceof HTMLHeadElement) { loadBlobStyle(inline); }\r\n\r\n    //\r\n    const style = document.createElement(\"style\");\r\n    style.dataset.owner = OWNER;\r\n    loadStyleSheet(inline, [style, \"innerHTML\"]);\r\n    PLACE.appendChild(style);\r\n};\r\n"],"names":["parseOrigin","origin","element","values","split","x","parseLength","clientWidth","y","clientHeight","DOMPoint","value","size","endsWith","parseFloat","getOffsetParent","offsetParent","host","getOffsetParentChain","parents","current","parent","HTMLHtmlElement","push","onBorderObserve","WeakMap","onContentObserve","getPxValue","name","cm","computedStyleMap","get","cs","getComputedStyle","getPropertyValue","replace","observeContentBox","cb","has","callbacks","observer","ResizeObserver","entries","entry","contentBoxSize","forEach","inlineSize","blockSize","set","observe","box","observeBorderBox","borderBoxSize","offsetWidth","offsetHeight","observeAttribute","attribute","attributeList","Set","map","s","trim","MutationObserver","mutationList","mutation","attributeName","attributeOldValue","attributes","attributeFilter","target","type","oldValue","getAttribute","observeAttributeBySelector","selector","addedNodes","Array","from","removedNodes","flatMap","el","querySelectorAll","filter","matches","childList","subtree","characterData","observeBySelector","mut","obs","$addedNodes","$removedNodes","length","attributeNamespace","nextSibling","previousSibling","selected","url","source","URL","createObjectURL","Blob","html","parsed","DOMParser","parseFromString","querySelector","MOC","closest","MOCElement","AxQuery2","rootElement","document","documentElement","constructor","this","fx","observeNodes","queryAll","delegated","options","addEventListener","ev","directly","stopPropagation","elementFromPoint","clientX","clientY","treeElement","elementsFromPoint","indexOf","$$","includeSelf","updateInput","state","input","dataset","dispatchEvent","Event","bubbles","cancelable","radio","checked","click","checkbox","synchronizeInputs","wrapper","fields","subscribe","onChange","valueAsNumber","isNaN","requestIdleCallback","timeout","property","mutations","OWNER","styleElement","createElement","appendChild","owner","setStyleRule","sheet","styleRules","ruleId","cssRules","findIndex","rule","CSSStyleRule","selectorText","insertRule","Object","propName","propValue","exists","style","setProperty","setStyleRules","classes","args","hash","async","hashBuffer","crypto","subtle","digest","TextEncoder","encode","string","btoa","String","fromCharCode","apply","Uint8Array","loadStyleSheet","inline","base","integrity","canParse","HTMLLinkElement","I","then","H","setAttribute","setStyleURL","loadBlobStyle","rel","crossOrigin","head","loadInlineStyle","PLACE","HTMLHeadElement"],"mappings":"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"}